@model ML.Materia

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">

    <div class="row">
        <div class="col-12">
            <h1 class="text-center">Agregar Materia</h1>

        </div>
    </div>

    <div>
        <i class="bi bi-trash3-fill"></i>
    </div>

    @using (Html.BeginForm("Form", "Materia", FormMethod.Post, new { enctype = "multipart/form-data", id = "UsuarioFormulario" , novalidate = "novalidate", @class = "needs-validation" }))
    {


        <div class="row">
            <div class="col-6">
                @Html.HiddenFor(model => model.IdMateria)

                @*<input type="type" name="name" class="border border-danger" value="" />*@
            </div>

            <div>
                @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                <div>
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", onkeypress = "validarNombre(this, event)" })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new {@style="color:red; font-weight:bold;"})
                </div>
                <div>
                    <span hidden></span>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-6">
                @Html.LabelFor(model => model.Descripcion, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control", onkeypress = "validarNombre(this, event)" })
            </div>

            <div>
                @Html.LabelFor(model => model.Creditos, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Creditos, new { @class = "form-control" })
            </div>

            <div>
                @Html.LabelFor(model => model.Semestre.IdSemestre, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.Semestre.IdSemestre, new SelectList(Model.Semestre.Semestres, "IdSemestre", "Descripcion"),
               "Seleccione un semestre", new { @class = "form-control", @id = "ddlSemestre", @onchange = "FillMaterias()" })
            </div>

            <div>
                @Html.LabelFor(model => model.IdMateria, new { @class = "form-label" })
                @Html.DropDownListFor(model => model.IdMateria, new SelectList(string.Empty),
                "Selecciona una Materia", new { @class = "form-control", @id = "ddlMateria" })
            </div>


            @Html.HiddenFor(model => model.Imagen)
        </div><div class="row">
            <div class="col-12">
                <input type="file" name="inptImgagenMateria" value="" accept="image/*" onchange="CargarArchivo(event)" />
                @if (Model.Imagen != null)
                {
                    <img src="data:image/*;base64,@Convert.ToBase64String(Model.Imagen)" height="250" />
                }
                else
                {

                    <img alt="Alternate Text" src="~/Content/Imagenes/vector-users-icon.jpg" id="imgInput" height="250" />
                }

                @Html.TextBoxFor(model => model.Fecha, new {@type="date" })

            </div>
        </div>

        <select>
            <option value="">Texto</option>
        </select>

        <div>
            <button class="btn btn-success" type="submit">Guardar</button>
        </div>

    }
</div>

<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script>
    function validarNombre(input, event) {

        const regex = /^[a-zA-Z\s]+$/;
        var letra = event.key;

        if (regex.test(letra)) {
            $(input).removeClass("border border-danger");
            $(input).addClass("border border-success");
        } else {
            event.preventDefault();
            $(input).addClass("border border-danger");
            $(input).removeClass("border border-success");
        }
    }


    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.UsuarioFormulario')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        })
    })()








    var CargarArchivo = function (input) {

        var img = input.target.files[0];

        if (!validar(img.name)) {
            return 0;
        }

        var reader = new FileReader()
        reader.onload = function () {

            var output = $('#imgInput')[0]
            //console.log(output)

            //var outputJS = document.getElementById('imgInput')
            //console.log(outputJS)
            output.src = reader.result
        }
        reader.readAsDataURL(img)
    }

    function validar(imgName) {

        let extensions = ["png", "jpg", "jpeg"];

        if (imgName == null) {
            alert("No se subio archivo");
            return false;
        }

        let imgExtension = imgName.split('.').pop().toLowerCase();

        if (!extensions.includes(imgExtension)) {
            alert("No es una extensión valida");
            return false;
        }

        return true;
    }


</script>

<script>
    function FillGrupos() {
        var IdSemestre = $('#ddlSemestre').val();
    console.log(IdSemestre)

    $.ajax({
        url: '@Url.Action("GetGrupoByIdSemestre")',
        dataType: 'JSON',
        method: 'GET',
        data: { IdSemestre },
        success: function (resultGrupos) {
            console.log(resultGrupos)
            if (resultGrupos.Correct) {

                $("#ddlGrupo").empty()
                $("#ddlGrupo").append('<option value="">Seleccione un semestre</option>')

                $.each(resultGrupos.Objects, function (i, grupo) {
                    $("#ddlGrupo").append('<option value="'+ grupo.IdGrupo+'">'+grupo.Nombre+'</option>')
                })
            }

        },
        error: function(ex){
            alert(ex)
        }
    })

    }

    function FillMaterias() {

        var IdSemestre = $('#ddlSemestre').val();

        console.log(IdSemestre)

        $.ajax({
            url: '@Url.Action("MateriaGetByIdSemestre")',
            method: 'GET',
            dataType: 'JSON',
            data: { IdSemestre },
            success: function (result) {
                console.log(result)
                if (result.Correct) {

                    $("#ddlMateria").empty()
                    $("#ddlMateria").append('<option value="">Selecciona una Materia</option>')

                    $.each(result.Objects, function (i, materia) {
                        $("#ddlMateria").append('<option value="' + materia.IdMateria + '">' + materia.Nombre + '</option>')
                    })
                }
                else {
                    alert(result.ErrorMessage)
                }
            },
            error: function (ex) {
                alert(ex)
            }
        })
    }



</script>

